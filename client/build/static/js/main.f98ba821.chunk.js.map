{"version":3,"sources":["components/ErrorAlert.jsx","contexts/auth.js","api.js","components/AppMenu.jsx","settings.js","components/SettingsOrgTeam.jsx","components/Loader.jsx","components/SettingsRepo.jsx","hoc/withAuthProvider.js","hooks/useFatReducer.js","App.jsx","index.jsx"],"names":["ErrorAlert","error","className","message","createContext","auth","setAuth","github","axios","create","baseURL","storedAuth","sessionStorage","getItem","initialAuth","JSON","parse","defaults","headers","authorization","access_token","getTeam","org","teamName","a","get","then","res","data","createRepo","orgName","repoName","template","split","templateOwner","templateRepo","post","owner","name","private","accept","repo","getMainBranch","branches","pop","checkRepo","getFirstCommit","commits","createBranch","fullName","branchName","sha","ref","setDefaultBranch","patch","default_branch","setBranchProtection","put","required_pull_request_reviews","dismiss_stale_reviews","require_code_owner_reviews","required_approving_review_count","enforce_admins","required_status_checks","restrictions","addMember","login","isAdmin","permission","delay","ms","Promise","resolve","setTimeout","setupRepo","members","admin","mainBranch","all","map","m","setAuthHeader","token","AppMenu","useState","setError","useContext","AuthContext","src","avatar_url","alt","type","onClick","removeItem","authorizationUrl","process","clientId","redirectUri","responseType","buttonText","scope","onSuccess","code","setItem","stringify","onFailure","SettingsOrgTeam","methods","handleInput","setTeamMembers","setStep","handleSubmitTeamName","e","preventDefault","teamData","find","u","push","id","NotificationManager","success","title","length","onSubmit","htmlFor","value","onChange","placeholder","Loader","SettingsRepo","repoAdmin","state","repoMembers","teamMembers","templates","handleChangeTemplate","isRepoMember","toggleRepoMember","status","setStatus","rethrow","label","err","loading","level","text","setLoading","handleCreateOption","inputValue","console","log","handleSubmitRepo","templateName","catch","member","key","checked","style","marginTop","isClearable","onCreateOption","options","disabled","withAuthProvider","Component","WrappedComponent","props","Provider","displayName","reducer","action","includes","filter","l","step","newTemplate","Error","useFatReducer","initialState","arr","defaultState","repoPrefix","baseTemplates","fullname","description","icon","storedJson","parsedState","getStoredState","useReducer","dispatch","dispatchAndStore","useEffect","stateJson","setStoredState","target","selectValue","t","Layout","children","Splash","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f98ba821.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function ErrorAlert({ error }) {\n  return (\n    <div className=\"ErrorAlert\">\n      {error && error.message}\n    </div>\n  )\n}\n","import { createContext } from 'react'\n\nexport default createContext({\n  auth: null,\n  setAuth: () => {},\n})\n","import axios from 'axios'\n\nconst github = axios.create({\n  baseURL: 'https://api.github.com',\n})\n\nconst storedAuth = sessionStorage.getItem('gh:auth')\nconst initialAuth = storedAuth ? JSON.parse(storedAuth) : null\nif (initialAuth) {\n  github.defaults.headers.authorization = `Bearer ${initialAuth.access_token}`\n}\n\nexport const getTeam = async(org, teamName) =>\n  github.get(`/orgs/${org}/teams/${teamName}/members`).then((res) => res.data)\n\nexport const createRepo = async(orgName, repoName, template) => {\n  const [templateOwner, templateRepo] = template.split('/')\n  const { data: repo } = await github.post(\n    `/repos/${templateOwner}/${templateRepo}/generate`,\n    {\n      owner: orgName,\n      name: repoName,\n      private: false,\n    },\n    { headers: { accept: 'application/vnd.github.baptiste-preview+json' } },\n  )\n  return repo\n}\n\nconst getMainBranch = async(repoName) => {\n  const { data: branches } = await github.get(`/repos/${repoName}/branches`)\n  return branches.pop()\n}\n\nexport const checkRepo = async(repoName) => {\n  const { data } = await github.get(`/repos/${repoName}`)\n  return data\n}\n\nconst getFirstCommit = async(repoName) => {\n  const { data: commits } = await github.get(`/repos/${repoName}/commits`)\n  return commits.pop()\n}\n\nconst createBranch = async(fullName, branchName, sha) =>\n  github.post(`/repos/${fullName}/git/refs`, {\n    ref: `refs/heads/${branchName}`,\n    sha,\n  })\n\nconst setDefaultBranch = async(fullName, branchName) =>\n  await github.patch(`/repos/${fullName}`, {\n    default_branch: branchName,\n  })\n\nconst setBranchProtection = async(fullName, branchName) =>\n  await github.put(\n    `/repos/${fullName}/branches/${branchName}/protection`,\n    {\n      required_pull_request_reviews: {\n        // dismissal_restrictions: {\n        //   users: [],\n        //   teams: [],\n        // },\n        dismiss_stale_reviews: false,\n        require_code_owner_reviews: false,\n        required_approving_review_count: 1,\n      },\n      enforce_admins: false,\n      required_status_checks: null,\n      restrictions: null,\n      // TODO: restrict who can push to matching branches\n    },\n    { headers: { accept: 'application/vnd.github.luke-cage-preview+json' } },\n  )\n\nconst addMember = async(fullName, login, isAdmin) =>\n  github.put(`/repos/${fullName}/collaborators/${login}`, {\n    permission: isAdmin ? 'admin' : 'push',\n  })\n\nexport const delay = async(ms = 250) => new Promise((resolve) => setTimeout(resolve, ms))\n\nexport const setupRepo = async(fullName, members, admin) => {\n  // Get its full name, and first commit's sha\n  const { sha } = await getFirstCommit(fullName)\n\n  // Create dev branch and set it as the default branch\n  await createBranch(fullName, 'dev', sha)\n  await setDefaultBranch(fullName, 'dev')\n\n  // Create branch protections\n  // This shouldn't break if GH sets main as default branch in the future\n  const { name: mainBranch } = await getMainBranch(fullName)\n  await setBranchProtection(fullName, mainBranch)\n  await setBranchProtection(fullName, 'dev')\n\n  // Add members\n  await Promise.all(members.map((m) => addMember(fullName, m, m === admin)))\n}\n\nexport const setAuthHeader = (token) => {\n  if (token) {\n    github.defaults.headers.authorization = `Bearer ${token}`\n  } else {\n    delete github.defaults.headers.authorization\n  }\n}\n","import React, { useState, useContext } from 'react'\nimport OAuth2Login from 'react-simple-oauth2-login'\nimport axios from 'axios'\nimport ErrorAlert from './ErrorAlert'\nimport AuthContext from '../contexts/auth'\nimport { authorizationUrl, clientId, redirectUri, serverUrl } from '../settings'\nimport { setAuthHeader } from '../api'\n\nexport default function AppMenu() {\n  const [error, setError] = useState(null)\n  const { auth, setAuth } = useContext(AuthContext)\n\n  const onSuccess = ({ code }) =>\n    axios\n      .get(`${serverUrl}/github/token?code=${code}`)\n      .then((res) => res.data)\n      .then((data) => {\n        setAuth(data)\n        setAuthHeader(data.access_token)\n        sessionStorage.setItem('gh:auth', JSON.stringify(data))\n      })\n\n  const clearAuth = () => {\n    setAuth(null)\n    setAuthHeader('')\n    sessionStorage.removeItem('gh:auth')\n  }\n\n  return (\n    <nav className=\"AppMenu home-menu pure-menu pure-menu-horizontal\">\n      <span className=\"pure-menu-heading\">RepoHelper</span>\n      {error && <ErrorAlert error={error} />}\n\n      <ul className=\"pure-menu-list\">\n        {auth ? (\n          <li className=\"pure-menu-item\">\n            <span className=\"AppMenu-signedIn\">\n              <img src={auth.avatar_url} alt={auth.login} />\n              <button className=\"pure-button\" type=\"button\" onClick={clearAuth}>\n                Logout\n              </button>\n            </span>\n          </li>\n        ) : (\n          <li className=\"pure-menu-item\">\n            <OAuth2Login\n              className=\"pure-button\"\n              authorizationUrl={authorizationUrl}\n              clientId={clientId}\n              redirectUri={redirectUri}\n              responseType=\"code\"\n              buttonText=\"GitHub Login\"\n              scope=\"admin:org repo\"\n              onSuccess={onSuccess}\n              onFailure={setError}\n            />\n          </li>\n        )}\n      </ul>\n    </nav>\n  )\n}\n","// Ideally you should take these vars from process.env.REACT_APP_*\n// and define them in e.g. .env.local (if you're using Create React App)\n\n// Authorization screen base URL\n// e.g. https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#1-request-a-users-github-identity\nexport const authorizationUrl = process.env.REACT_APP_OAUTH_SCREEN_URL\n\n// To get a client ID, create an app, e.g.\n// GitHub (authorization code grant only): https://github.com/settings/developers\n// Spotify (implicit grant & auth code): https://developer.spotify.com/dashboard/applications\nexport const clientId = process.env.REACT_APP_OAUTH_CLIENT_ID\n\n// You get to configure this in your OAuth settings\n// If you use React Router, the relative path (empty here) can match\n// that of a route which displays nothing\nexport const redirectUri = process.env.REACT_APP_OAUTH_REDIRECT_URI\n\n// Authorization code flow only: base URL for your server\n// The one provided below is that of the sample Express server provided\nexport const serverUrl = process.env.REACT_APP_SERVER_URL\n","import React from 'react'\nimport {\n  NotificationManager,\n} from 'react-light-notifications'\nimport { getTeam } from '../api'\n\nexport default function SettingsOrgTeam({\n  auth,\n  orgName,\n  teamName,\n  methods: { handleInput, setTeamMembers, setStep },\n}) {\n  const handleSubmitTeamName = async(e) => {\n    e.preventDefault()\n    try {\n      const teamData = await getTeam(orgName, teamName)\n      const isCurrentUserMember = !!teamData.find((u) => u.login === auth.login)\n      if (!isCurrentUserMember) {\n        teamData.push({ id: auth.id, login: auth.login })\n      }\n      setTeamMembers(teamData)\n      NotificationManager.success({\n        title: 'Team successfully retrieved',\n        message: `Found team \"${teamName}\" with ${teamData.length} members`,\n      })\n      setStep(2)\n    } catch (err) {\n      NotificationManager.error({\n        title: 'Organization or team not found',\n        message: `Error message: ${err.message}`,\n      })\n    }\n  }\n  return (\n    <form\n      className=\"pure-form pure-form-stacked\"\n      onSubmit={handleSubmitTeamName}\n    >\n      <fieldset>\n        <legend>\n          <span className=\"App-step\">1</span>Choose org&amp;team\n        </legend>\n        <label htmlFor=\"orgName\">Org</label>\n        <input\n          id=\"orgName\"\n          name=\"orgName\"\n          value={orgName}\n          onChange={handleInput}\n          placeholder=\"YourOrg\"\n        />\n        <label htmlFor=\"teamName\">Team</label>\n        <input\n          id=\"teamName\"\n          name=\"teamName\"\n          value={teamName}\n          onChange={handleInput}\n          placeholder=\"this-awesome-team\"\n        />\n        <button className=\"pure-button pure-button-primary\">Submit</button>\n      </fieldset>\n    </form>\n  )\n}\n","import React from 'react'\nimport './Loader.css'\n\nexport default function Loader() {\n  return (\n    <div className=\"lds-roller\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport CreatableSelect from 'react-select/creatable'\nimport {\n  NotificationManager,\n} from 'react-light-notifications'\nimport Loader from './Loader'\nimport { createRepo, delay, checkRepo, setupRepo } from '../api'\n\nexport default function SettingsRepo({\n  repoAdmin,\n  state: { orgName, repoName, template, repoMembers, teamMembers, templates },\n  methods: { handleInput, handleChangeTemplate, isRepoMember, toggleRepoMember, setStep },\n}) {\n  const [status, setStatus] = useState(null)\n\n  const rethrow = (label) => (err) => {\n    setStatus({\n      loading: false,\n      level: 'error',\n      text: `Error during ${label}: ${err.message}`,\n    })\n    throw err\n  }\n\n  const setLoading = (text) =>\n    setStatus({\n      loading: true,\n      level: 'loading',\n      text,\n    })\n\n  const handleCreateOption = async(inputValue) => {\n    setLoading('Checking template', inputValue)\n    try {\n      const data = await checkRepo(inputValue)\n      console.log(inputValue, data)\n      NotificationManager.success({\n        title: 'Template added',\n        message: `Good news, template \"${inputValue}\" exists!`,\n      })\n      handleChangeTemplate({ label: inputValue, value: inputValue })\n    } catch (err) {\n      NotificationManager.error({\n        title: 'Template not added',\n        message: `Oops! Template \"${inputValue}\" does not exist!`,\n      })\n    } finally {\n      setStatus(null)\n    }\n  }\n\n  const handleSubmitRepo = async(e) => {\n    e.preventDefault()\n\n    try {\n      const templateName = template.value\n\n      // Create repo\n      setLoading('Creating repo')\n      await createRepo(orgName, repoName, templateName).catch(\n        rethrow('repo creation')\n      )\n\n      // Wait some time (otherwise no commits exist => can't create dev branch)\n      setLoading('Waiting...')\n      await delay(5000)\n\n      setLoading('Post-creation setup')\n      const fullName = `${orgName}/${repoName}`\n      await setupRepo(fullName, repoMembers, repoAdmin).catch(\n        rethrow('repo post-setup')\n      )\n\n      NotificationManager.success({\n        title: 'Repo created',\n        message: `Done creating ${fullName}`,\n      })\n      setStatus(null)\n    } catch (err) {\n      NotificationManager.error({\n        title: 'Something bad happened',\n        message: 'Repo creation failed!',\n      })\n    }\n  }\n  return (\n    <form className=\"pure-form pure-form-stacked\" onSubmit={handleSubmitRepo}>\n      <fieldset>\n        <legend>\n          <span className=\"App-step\">2</span>Repo settings\n          <button\n            type=\"button\"\n            className=\"App-stepBack btn-transparent\"\n            onClick={() => setStep(1)}\n          >\n            Back\n          </button>\n        </legend>\n\n        <div className=\"pure-g\">\n          <div className=\"pure-u-3-5\">\n            <div className=\"SettingsRepo-team\">\n              {teamMembers.map((member) => (\n                <label className=\"SettingsRepo-member\" key={member.id}>\n                  <input\n                    htmlFor={`cb-${member.login}`}\n                    type=\"checkbox\"\n                    checked={isRepoMember(member.login)}\n                    onChange={() => toggleRepoMember(member.login)}\n                  />{' '}\n                  <img src={member.avatar_url} alt={member.login} />\n                  {member.login}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"pure-u-2-5\">\n            <label htmlFor=\"repoName\">Repo name</label>\n            <input\n              id=\"repoName\"\n              name=\"repoName\"\n              value={repoName}\n              onChange={handleInput}\n              placeholder=\"name\"\n            />\n            <label htmlFor=\"template\" style={{ marginTop: '1.5em' }}>Repo template</label>\n            <p>Select an existing template, or fill in the <code>owner/repository</code> template.</p>\n            <CreatableSelect\n              id=\"template\"\n              isClearable\n              onCreateOption={handleCreateOption}\n              onChange={handleChangeTemplate}\n              options={templates}\n              value={template}\n            />\n            <button className=\"pure-button pure-button-primary\" disabled={!repoName || !template}>Submit</button>\n\n            {status && (\n              <div className=\"SettingsRepo-status\">\n                {status.loading ? (\n                  <Loader />\n                ) : (\n                  <button\n                    className=\"btn-transparent\"\n                    type=\"button\"\n                    onClick={() => setStatus(null)}\n                  >\n                    &times;\n                  </button>\n                )}\n                <span className={`SettingsRepo-${status.level}Status`}>\n                  {status.text}\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n      </fieldset>\n    </form>\n  )\n}\n","import React, { useState } from 'react'\nimport AuthContext from '../contexts/auth'\nconst withAuthProvider = (Component) => {\n  const WrappedComponent = (props) => {\n    const storedAuth = sessionStorage.getItem('gh:auth')\n    const initialAuth = storedAuth ? JSON.parse(storedAuth) : null\n    const [auth, setAuth] = useState(initialAuth)\n    return (\n      <AuthContext.Provider value={{ auth, setAuth }}>\n        <Component {...props} />\n      </AuthContext.Provider>\n    )\n  }\n  WrappedComponent.displayName = 'withAuthProvider'\n  return WrappedComponent\n}\n\nexport default withAuthProvider\n","// Note: I should whip myself for using such a lousy name!!\nimport { useEffect, useReducer } from 'react'\nimport baseTemplates from '../data/templates.json'\n\nconst mapTemplates = arr => arr.map(({ fullname: value, description: label, icon }) => ({ value, label, icon }))\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT': {\n      const { name, value } = action\n      return { ...state, [name]: value }\n    }\n    case 'TEMPLATE': {\n      const { template } = action\n      return { ...state, template }\n    }\n    case 'STORE_MEMBERS': {\n      const { members } = action\n      return { ...state, teamMembers: members }\n    }\n    case 'TOGGLE_MEMBER': {\n      const { login } = action\n      const repoMembers = state.repoMembers.includes(login)\n        ? state.repoMembers.filter((l) => l !== login)\n        : [...state.repoMembers, login]\n      return { ...state, repoMembers }\n    }\n    case 'SET_STEP': {\n      const { step } = action\n      return { ...state, step }\n    }\n    case 'ADD_TEMPLATE': {\n      const { label, value } = action\n      const newTemplate = { label, value }\n      const templates = [...state.templates, newTemplate]\n      return { ...state, templates }\n    }\n    default:\n      throw new Error(`Unknown action ${action.type}`)\n  }\n}\n\nconst getStoredState = () => {\n  const defaultState = {\n    step: 1,\n    orgName: '',\n    teamName: '',\n    repoPrefix: '',\n    repoName: '',\n    template: null,\n    repoMembers: [],\n    teamMembers: [],\n    templates: mapTemplates(baseTemplates),\n  }\n  const storedJson = sessionStorage.getItem('gh:projdata')\n  if (!storedJson) return defaultState\n  try {\n    const parsedState = JSON.parse(storedJson)\n    return { ...defaultState, ...parsedState }\n  } catch (err) {\n    return defaultState\n  }\n}\n\nconst setStoredState = (state) => {\n  const stateJson = JSON.stringify(state)\n  sessionStorage.setItem('gh:projdata', stateJson)\n}\n\nconst useFatReducer = () => {\n  const initialState = getStoredState()\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const dispatchAndStore = async(...args) => {\n    await dispatch(...args)\n  }\n\n  useEffect(() => {\n    setStoredState(state)\n  }, [state])\n\n  const handleInput = ({ target: { name, value } }) =>\n    dispatchAndStore({\n      type: 'INPUT',\n      name,\n      value,\n    })\n\n  const handleChangeTemplate = (selectValue) => {\n    if (selectValue === null) {\n      dispatchAndStore({\n        type: 'TEMPLATE',\n        template: null,\n      })\n      return\n    }\n    const { label, value } = selectValue\n    if (label === value && !state.templates.find(t => t.value === value)) {\n      dispatchAndStore({\n        type: 'ADD_TEMPLATE',\n        label,\n        value,\n      })\n    }\n    dispatchAndStore({\n      type: 'TEMPLATE',\n      template: selectValue,\n    })\n  }\n\n  const setTeamMembers = (members) =>\n    dispatchAndStore({\n      type: 'STORE_MEMBERS',\n      members,\n    })\n\n  const toggleRepoMember = (login) =>\n    dispatchAndStore({\n      type: 'TOGGLE_MEMBER',\n      login,\n    })\n\n  const setStep = (step) => dispatchAndStore({ type: 'SET_STEP', step })\n\n  const isRepoMember = (login) => state?.repoMembers?.includes(login)\n\n  return [\n    state,\n    {\n      handleInput,\n      handleChangeTemplate,\n      setTeamMembers,\n      isRepoMember,\n      toggleRepoMember,\n      setStep,\n    },\n  ]\n}\n\nexport default useFatReducer\n","import React, { useEffect, useContext } from 'react'\nimport {\n  NotificationContainer,\n} from 'react-light-notifications'\nimport AppMenu from './components/AppMenu'\nimport SettingsOrgTeam from './components/SettingsOrgTeam'\nimport SettingsRepo from './components/SettingsRepo'\nimport withAuthProvider from './hoc/withAuthProvider'\nimport AuthContext from './contexts/auth'\nimport useFatReducer from './hooks/useFatReducer'\nimport './App.css'\n\nconst Layout = ({ children }) => (\n  <div className=\"App\">\n    <AppMenu />\n    <main className=\"App-inner\">{children}</main>\n    <NotificationContainer />\n  </div>\n)\n\nconst Splash = () => <div className=\"Splash\">Please login!</div>\n\nfunction App() {\n  const [state, methods] = useFatReducer()\n  const { auth } = useContext(AuthContext)\n\n  const {\n    orgName,\n    teamName,\n  } = state\n\n  useEffect(() => {}, [auth])\n\n  if (!auth) {\n    return (\n      <Layout>\n        <Splash />\n      </Layout>\n    )\n  }\n\n  switch (state.step) {\n    case 1:\n      return (\n        <Layout>\n          <SettingsOrgTeam\n            auth={auth}\n            orgName={orgName}\n            teamName={teamName}\n            methods={methods}\n          />\n        </Layout>\n      )\n    case 2:\n      return (\n        <Layout>\n          <SettingsRepo\n            repoAdmin={auth.login}\n            state={state}\n            methods={methods}\n          />\n        </Layout>\n      )\n    default:\n      return <h1>Error</h1>\n  }\n}\n\nexport default withAuthProvider(App)\n","/* eslint-disable react/jsx-filename-extension */\nimport 'regenerator-runtime/runtime'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'purecss/build/pure.css'\nimport 'react-light-notifications/lib/main.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}